name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build debug APK
      run: ./gradlew assembleDebug

    - name: Generate GitHub App Token
      id: app_token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Create Release
      id: create_release
      run: |
        RELEASE_TAG="build-${GITHUB_SHA::8}"
        RELEASE_NAME="Build $(date +'%Y-%m-%d %H:%M:%S')"

        # Create release
        RELEASE_RESPONSE=$(curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.app_token.outputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d "{
            \"tag_name\":\"$RELEASE_TAG\",
            \"target_commitish\":\"${{ github.sha }}\",
            \"name\":\"$RELEASE_NAME\",
            \"body\":\"Automated build from commit ${{ github.sha }}\",
            \"draft\":false,
            \"prerelease\":false
          }")

        # Extract upload URL and release ID
        UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r '.upload_url' | sed 's/{?name,label}//')
        RELEASE_ID=$(echo "$RELEASE_RESPONSE" | jq -r '.id')

        echo "upload_url=$UPLOAD_URL" >> $GITHUB_OUTPUT
        echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT
        echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

    - name: Upload APK to Release
      run: |
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.app_token.outputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/vnd.android.package-archive" \
          "${{ steps.create_release.outputs.upload_url }}?name=app-debug.apk&label=Android Debug APK" \
          --data-binary @./app/build/outputs/apk/debug/app-debug.apk
